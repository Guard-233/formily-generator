{"version":3,"sources":["components/core/baseComponent/builtInComponent/schema.ts","utils/transform.ts","components/core/context/index.ts","components/draggable/nested.tsx","components/draggable/index.tsx","utils/index.ts","components/core/baseComponent/builtInComponent/index.tsx","components/core/baseComponent/arrayComponent/schema.ts","components/core/baseComponent/arrayComponent/index.tsx","components/core/baseComponent/layoutComponent/schema.ts","components/core/baseComponent/layoutComponent/index.tsx","components/core/baseComponent/index.tsx","components/core/container/preview/index.tsx","components/core/container/index.tsx","components/core/propertiesEdit/schema/index.ts","components/core/propertiesEdit/index.tsx","components/core/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["schema","type","properties","string","title","placeholder","select","enum","label","value","textarea","Password","NumberPicker","Switch","DatePicker","format","WeekPicker","MonthPicker","YearPicker","TimePicker","Range","min","max","marks","upload","listType","checkbox","radio","rating","allowHalf","transfer","key","showSearch","render","record","DraggableToFormily","list","arrayToObject","reduce","propertiesPre","PropertiesNow","id","pre","now","DeepPropertise","Object","create","assign","patternProperties","items","Array","isArray","map","item","FormilyToDraggable","vSchema","cloneDeep","keys","ObjectToArray","propertiesKey","nowKey","ActiveItem","createContext","active","setList","IDraggableList","changeActive","BuiltInComponents","Input","Select","TextArea","RangePicker","Upload","Checkbox","CheckboxGroup","Group","Radio","RadioGroup","Rating","Transfer","LayoutComponents","FormCard","margeComponents","Nested","props","nestedSetList","newState","t","dragging","useContext","ObjectRender","Fragment","component","merge","group","name","style","minHeight","index","components","formComponent","onClick","DefaultRender","ReactDraggable","GenNonDuplicateID","randomLength","Number","Math","random","toString","substr","Date","BuiltInComponent","useState","pull","put","sort","clone","arrayTable","maxItems","aa","description","bb","arrayCards","ArrayComponent","formCards","LayoutComponent","BaseComponent","width","height","overflow","ArrayComponents","ArrayTable","ArrayCards","Preview","visible","state","setState","onOk","e","onCancel","centered","bodyStyle","maxHeight","onSubmit","args","console","log","Container","labelAlign","default","const","readOnly","writeOnly","NO_NAME","multipleOf","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxLength","minLength","pattern","minItems","uniqueItems","maxProperties","minProperties","required","additionalItems","additionalProperties","triggerType","editable","display","FormMegaLayout","PropertiesEdit","Core","setActive","Provider","FriendStatus","App","count","setCount","useEffect","document","firend","firendId","online","setOnline","handleStatusChange","status","useFriendStatus","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c9ccf55.chunk.js","sourcesContent":["import { ISchema } from \"@formily/antd\";\r\n\r\nexport const schema: ISchema = {\r\n\ttype: \"object\",\r\n\tproperties: {\r\n\t\t// import { Input } from '@formily/antd-components'\r\n\t\tstring: {\r\n\t\t\ttitle: \"String\",\r\n\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tplaceholder: \"input\",\r\n\t\t\t},\r\n\t\t\ttype: \"string\",\r\n\t\t},\r\n\t\t// import { Select } from '@formily/antd-components'\r\n\t\tselect: {\r\n\t\t\ttitle: \"Object Select\",\r\n\t\t\t\"x-component\": \"Select\",\r\n\t\t\tenum: [\r\n\t\t\t\t{ label: \"One\", value: \"1\" },\r\n\t\t\t\t{ label: \"Two\", value: \"2\" },\r\n\t\t\t\t{ label: \"Three\", value: \"3\" },\r\n\t\t\t\t{ label: \"Four\", value: \"4\" },\r\n\t\t\t],\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tplaceholder: \"select\",\r\n\t\t\t},\r\n\t\t},\r\n\t\t//  components={{\r\n\t\t//   TextArea: Input.TextArea\r\n\t\t// }}\r\n\t\ttextarea: {\r\n\t\t\ttitle: \"String\",\r\n\t\t\t\"x-component\": \"TextArea\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tplaceholder: \"textarea\",\r\n\t\t\t},\r\n\t\t},\r\n\t\t// import { Password } from '@formily/antd-components'\r\n\t\tPassword: {\r\n\t\t\ttitle: \"Password\",\r\n\t\t\t\"x-component\": \"Password\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tplaceholder: \"Password\",\r\n\t\t\t},\r\n\t\t},\r\n\t\t// import { NumberPicker } from '@formily/antd-components'\r\n\t\tNumberPicker: {\r\n\t\t\ttitle: \"NumberPicker\",\r\n\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t},\r\n\t\t// import { Switch } from '@formily/antd-components'\r\n\t\tSwitch: {\r\n\t\t\ttitle: \"Switch\",\r\n\t\t\t\"x-component\": \"Switch\",\r\n\t\t},\r\n\t\t// import { DatePicker } from '@formily/antd-components'\r\n\t\tDatePicker: {\r\n\t\t\ttitle: \"DatePicker\",\r\n\t\t\t\"x-component\": \"DatePicker\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tformat: \"YYYY-MM-DD HH:mm:ss\",\r\n\t\t\t},\r\n\t\t},\r\n\t\t// RangePicker: DatePicker.RangePicker\r\n\t\t\"[start,end]\": {\r\n\t\t\ttitle: \"RangePicker\",\r\n\t\t\t\"x-component\": \"RangePicker\",\r\n\t\t},\r\n\t\t// WeekPicker: DatePicker.WeekPicker\r\n\t\tWeekPicker: {\r\n\t\t\ttitle: \"WeekPicker\",\r\n\t\t\t\"x-component\": \"WeekPicker\",\r\n\t\t},\r\n\t\t// MonthPicker: DatePicker.MonthPicker\r\n\t\tMonthPicker: {\r\n\t\t\ttitle: \"MonthPicker\",\r\n\t\t\t\"x-component\": \"MonthPicker\",\r\n\t\t},\r\n\t\t// YearPicker: DatePicker.YearPicker\r\n\t\tYearPicker: {\r\n\t\t\ttitle: \"YearPicker\",\r\n\t\t\t\"x-component\": \"YearPicker\",\r\n\t\t},\r\n\t\t// import { TimePicker } from '@formily/antd-components'\r\n\t\tTimePicker: {\r\n\t\t\ttitle: \"TimePicker\",\r\n\t\t\t\"x-component\": \"TimePicker\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tformat: \"YYYY-MM-DD HH:mm:ss\",\r\n\t\t\t},\r\n\t\t},\r\n\t\t// import { Range } from '@formily/antd-components'\r\n\t\tRange: {\r\n\t\t\ttitle: \"Range\",\r\n\t\t\t\"x-component\": \"Range\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 1024,\r\n\t\t\t\tmarks: [0, 1024],\r\n\t\t\t},\r\n\t\t},\r\n\t\t// import { Upload } from '@formily/antd-components'\r\n\t\tupload: {\r\n\t\t\ttitle: \"Card Upload\",\r\n\t\t\t\"x-component\": \"Upload\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tlistType: \"card\",\r\n\t\t\t},\r\n\t\t},\r\n\t\t// import { Checkbox } from '@formily/antd-components'\r\n\t\tcheckbox: {\r\n\t\t\ttitle: \"Object Checkbox\",\r\n\t\t\t\"x-component\": \"CheckboxGroup\",\r\n\t\t\tenum: [\r\n\t\t\t\t{ label: \"One\", value: \"1\" },\r\n\t\t\t\t{ label: \"Two\", value: \"2\" },\r\n\t\t\t\t{ label: \"Three\", value: \"3\" },\r\n\t\t\t\t{ label: \"Four\", value: \"4\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\t// import { Radio } from '@formily/antd-components'\r\n\t\tradio: {\r\n\t\t\ttitle: \"Object Radio\",\r\n\t\t\t\"x-component\": \"RadioGroup\",\r\n\t\t\tenum: [\r\n\t\t\t\t{ label: \"One\", value: \"1\" },\r\n\t\t\t\t{ label: \"Two\", value: \"2\" },\r\n\t\t\t\t{ label: \"Three\", value: \"3\" },\r\n\t\t\t\t{ label: \"Four\", value: \"4\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\t// import { Rating } from '@formily/antd-components'\r\n\t\trating: {\r\n\t\t\ttitle: \"Rating\",\r\n\t\t\t\"x-component\": \"Rating\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tallowHalf: true,\r\n\t\t\t},\r\n\t\t},\r\n\t\t// import { Transfer } from '@formily/antd-components'\r\n\t\ttransfer: {\r\n\t\t\ttitle: \"Transfer\",\r\n\t\t\t\"x-component\": \"Transfer\",\r\n\t\t\tenum: [\r\n\t\t\t\t{ label: \"One\", value: \"1\", key: \"1\" },\r\n\t\t\t\t{ label: \"Two\", value: \"2\", key: \"2\" },\r\n\t\t\t\t{ label: \"Three\", value: \"3\", key: \"3\" },\r\n\t\t\t\t{ label: \"Four\", value: \"4\", key: \"4\" },\r\n\t\t\t],\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tshowSearch: true,\r\n\t\t\t\trender: (record: { label: any }) => record.label,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n","/** @format */\r\n\r\nimport { cloneDeep } from 'lodash'\r\nimport { IDraggableList } from '../components/draggable/draggable'\r\nimport { ISchema } from '@formily/antd'\r\n\r\n/**\r\n * 将 Draggable(ReactSortable) 的数据格式转换为 formily 所需的数据格式\r\n * @param list 传入 IDrIDraggableList[] 格式的数据\r\n */\r\nexport const DraggableToFormily = (list: IDraggableList[]): ISchema => {\r\n\tconst arrayToObject = (\r\n\t\tproperties: IDraggableList[]\r\n\t): {\r\n\t\t[key: string]: ISchema\r\n\t} => {\r\n\t\treturn properties.reduce((propertiesPre, PropertiesNow) => {\r\n\t\t\treturn {\r\n\t\t\t\t...propertiesPre,\r\n\t\t\t\t[PropertiesNow.id]: DraggableToFormily([PropertiesNow])\r\n\t\t\t}\r\n\t\t}, {})\r\n\t}\r\n\r\n\tconst Schema = list.reduce((pre, now) => {\r\n\t\tconst DeepPropertise: ISchema = Object.create(null)\r\n\r\n\t\tObject.assign(DeepPropertise, now)\r\n\r\n\t\tif (now.properties) {\r\n\t\t\tDeepPropertise.properties = arrayToObject(now.properties)\r\n\t\t}\r\n\r\n\t\tif (now.patternProperties) {\r\n\t\t\tDeepPropertise.patternProperties = arrayToObject(now.patternProperties)\r\n\t\t}\r\n\r\n\t\tif (now.items) {\r\n\t\t\tif (!Array.isArray(now.items)) {\r\n\t\t\t\tnow.items = [now.items]\r\n\t\t\t}\r\n\t\t\tDeepPropertise.items = now.items.map((item) => DraggableToFormily([item]))\r\n\t\t}\r\n\r\n\t\tdelete (DeepPropertise as { id: string }).id\r\n\r\n\t\treturn {\r\n\t\t\t...pre,\r\n\t\t\t...DeepPropertise\r\n\t\t}\r\n\t}, {})\r\n\r\n\treturn Schema\r\n}\r\n\r\n/**\r\n * 将 formily 的数据格式转换为 Draggable(ReactSortable) 所需的数据格式\r\n * @param vSchema 传入 ISchema 格式的数据\r\n * @param key 可控制ISchema数据格式的第一个对象转换为 Draggable(ReactSortable) 格式时的id名\r\n */\r\nexport const FormilyToDraggable = (vSchema: ISchema, key?: string): IDraggableList[] => {\r\n\tconst schema = {\r\n\t\t[key || 'schema']: cloneDeep(vSchema)\r\n\t}\r\n\tconst keys = Object.keys(schema)\r\n\r\n\tconst ObjectToArray = (properties: { [key: string]: ISchema }) => {\r\n\t\treturn Object.keys(properties).map((propertiesKey) => {\r\n\t\t\treturn FormilyToDraggable(properties[propertiesKey], propertiesKey)[0]\r\n\t\t})\r\n\t}\r\n\r\n\tconst result = keys.reduce((pre: Array<IDraggableList>, nowKey: string) => {\r\n\t\tconst value: any = schema[nowKey]\r\n\r\n\t\tif (value.properties) {\r\n\t\t\tvalue.properties = ObjectToArray(value.properties)\r\n\t\t}\r\n\r\n\t\tif (value.patternProperties) {\r\n\t\t\tvalue.patternProperties = ObjectToArray(value.patternProperties)\r\n\t\t}\r\n\r\n\t\tif (value.items) {\r\n\t\t\tif (typeof value.items === 'object' && !Array.isArray(value.items)) {\r\n\t\t\t\tvalue.items = [value.items]\r\n\t\t\t}\r\n\t\t\tvalue.items = value.items.map(\r\n\t\t\t\t(item: ISchema | { [key: string]: ISchema }) => FormilyToDraggable(item)[0]\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\t...pre,\r\n\t\t\t{\r\n\t\t\t\tid: nowKey,\r\n\t\t\t\t...value\r\n\t\t\t}\r\n\t\t]\r\n\t}, [])\r\n\r\n\treturn result\r\n}\r\n","/** @format */\r\n\r\nimport { createContext } from 'react'\r\nimport { IDraggableList } from '../../draggable/draggable.d'\r\n\r\nconst active = {\r\n\tlist: {\r\n\t\tid: 'schema'\r\n\t},\r\n\tsetList: (IDraggableList: IDraggableList) => {}\r\n}\r\n\r\nconst changeActive: any = () => {\r\n\treturn {}\r\n}\r\n\r\nexport const ActiveItem = createContext<{\r\n\tactive: {\r\n\t\tlist: IDraggableList\r\n\t\tsetList(IDraggableList: IDraggableList): void\r\n\t}\r\n\tchangeActive: React.Dispatch<\r\n\t\tReact.SetStateAction<{\r\n\t\t\tlist: IDraggableList\r\n\t\t\tsetList(IDraggableList: IDraggableList): void\r\n\t\t}>\r\n\t>\r\n}>({\r\n\tactive,\r\n\tchangeActive\r\n})\r\n","/** @format */\r\n\r\nimport React, { useContext } from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport { INestedProps, IDraggableList } from './draggable'\r\nimport { SchemaForm, SchemaMarkupField as Field } from '@formily/antd'\r\nimport { DraggableToFormily } from '../../utils/transform'\r\nimport { merge } from 'lodash'\r\nimport {\r\n\tInput,\r\n\tSelect,\r\n\tPassword,\r\n\tNumberPicker,\r\n\tSwitch,\r\n\tDatePicker,\r\n\tTimePicker,\r\n\tRange,\r\n\tUpload,\r\n\tCheckbox,\r\n\tRadio,\r\n\tRating,\r\n\tTransfer,\r\n\tFormCard\r\n} from '@formily/antd-components'\r\nimport { Card, Form } from 'antd'\r\nimport { cloneDeep } from 'lodash'\r\nimport { ActiveItem } from '../core/context'\r\nimport 'antd/dist/antd.css'\r\nimport './nested.scss'\r\n\r\n// 内置的非布局组件\r\nconst BuiltInComponents = {\r\n\tInput,\r\n\tSelect,\r\n\tTextArea: Input.TextArea,\r\n\tPassword,\r\n\tNumberPicker,\r\n\tSwitch,\r\n\tDatePicker,\r\n\tRangePicker: DatePicker.RangePicker,\r\n\tWeekPicker: DatePicker.WeekPicker,\r\n\tMonthPicker: DatePicker.MonthPicker,\r\n\tYearPicker: DatePicker.YearPicker,\r\n\tTimePicker,\r\n\tRange,\r\n\tUpload,\r\n\tCheckbox,\r\n\tCheckboxGroup: Checkbox.Group,\r\n\tRadio,\r\n\tRadioGroup: Radio.Group,\r\n\tRating,\r\n\tTransfer\r\n}\r\n\r\n// 布局组件\r\nconst LayoutComponents = {\r\n\tFormCard\r\n}\r\n\r\n/**\r\n * 合并后的组件\r\n * @todo 是否可以考虑进行动态引入\r\n */\r\nconst margeComponents = {\r\n\t...BuiltInComponents,\r\n\t...LayoutComponents\r\n}\r\n\r\n/**\r\n * 项目核心函数式组件，用于递归渲染\r\n * @param props\r\n */\r\nexport const Nested = (props: INestedProps) => {\r\n\tconst { list, setList } = props\r\n\r\n\tif (list === undefined) {\r\n\t\tdebugger\r\n\t}\r\n\r\n\t/**\r\n\t * 重写setList,使其对于递归组件也有效果\r\n\t * @param item\r\n\t */\r\n\tconst nestedSetList = (item: IDraggableList) => {\r\n\t\treturn (newState: IDraggableList | IDraggableList[]) => {\r\n\t\t\tsetList(\r\n\t\t\t\tlist.map((t) => {\r\n\t\t\t\t\tif (t.id === item.id) {\r\n\t\t\t\t\t\tif (t.type === 'object') {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\t\tproperties: cloneDeep(newState) as IDraggableList[]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (item.type === 'array') {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\t\titems: cloneDeep(newState) as IDraggableList[]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn newState as IDraggableList\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn t\r\n\t\t\t\t}),\r\n\t\t\t\tnull,\r\n\t\t\t\t{\r\n\t\t\t\t\tdragging: null\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tconst { changeActive } = useContext(ActiveItem)\r\n\r\n\t/**\r\n\t * 目前的默认渲染机制\r\n\t * @param item\r\n\t */\r\n\tconst DefaultRender = (item: IDraggableList) => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment key={item.id}>\r\n\t\t\t\t<SchemaForm\r\n\t\t\t\t\tcomponents={margeComponents}\r\n\t\t\t\t\tformComponent={'div'}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tchangeActive({\r\n\t\t\t\t\t\t\tlist: item,\r\n\t\t\t\t\t\t\tsetList: (newState) => {\r\n\t\t\t\t\t\t\t\tnestedSetList(item)(newState)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tschema={{\r\n\t\t\t\t\t\ttype: 'object',\r\n\t\t\t\t\t\tproperties: { [item.id]: DraggableToFormily([item]) }\r\n\t\t\t\t\t}}\r\n\t\t\t\t></SchemaForm>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * 对于对象的渲染机制\r\n\t * @param item\r\n\t * @todo 目前样式上之对于Cards有效\r\n\t */\r\n\tconst ObjectRender = (item: IDraggableList) => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment key={item.id}>\r\n\t\t\t\t<Form component={'div'}>\r\n\t\t\t\t\t<Card title={item.title}>\r\n\t\t\t\t\t\t<Nested\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\tlist={item.properties || []}\r\n\t\t\t\t\t\t\tsetList={nestedSetList(item)}\r\n\t\t\t\t\t\t></Nested>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Form>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * 对于数组的渲染机制\r\n\t * @param item\r\n\t * @todo 暂未完善\r\n\t */\r\n\tconst ArrayRender = (item: IDraggableList) => {\r\n\t\treturn (\r\n\t\t\t<SchemaForm\r\n\t\t\t\tcomponent={'div'}\r\n\t\t\t\tcomponents={{ ...margeComponents, Nested }}\r\n\t\t\t\tkey={item.id}\r\n\t\t\t>\r\n\t\t\t\t<FormCard title=\"block\">\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tx-component=\"Nested\"\r\n\t\t\t\t\t\tdefault={{\r\n\t\t\t\t\t\t\t...props,\r\n\t\t\t\t\t\t\tgroup: {\r\n\t\t\t\t\t\t\t\tname: 'g1',\r\n\t\t\t\t\t\t\t\tput: ['g2', 'g1']\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tlist: cloneDeep(item.properties) || [],\r\n\t\t\t\t\t\t\tsetList: nestedSetList(cloneDeep(item))\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormCard>\r\n\t\t\t</SchemaForm>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ReactSortable\r\n\t\t\t{...merge(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: {\r\n\t\t\t\t\t\tname: 'g1'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tprops\r\n\t\t\t)}\r\n\t\t\tlist={list}\r\n\t\t\tsetList={setList}\r\n\t\t\tstyle={{\r\n\t\t\t\tminHeight: '100px'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{list.map((item: IDraggableList, index: number) => {\r\n\t\t\t\tswitch (item.type) {\r\n\t\t\t\t\tcase 'object':\r\n\t\t\t\t\t\treturn ObjectRender(item)\r\n\t\t\t\t\tcase 'array':\r\n\t\t\t\t\t\treturn ObjectRender(item)\r\n\r\n\t\t\t\t\t// return ArrayRender(item)\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn DefaultRender(item)\r\n\t\t\t\t}\r\n\t\t\t})}\r\n\t\t</ReactSortable>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport { IReactDraggableProps } from \"./draggable\";\r\nimport { Nested } from \"./nested\";\r\n\r\nexport const ReactDraggable = (props: IReactDraggableProps) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Nested {...props} list={props.list} setList={props.setList}></Nested>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * 用于创建随机id\r\n *\r\n * @format\r\n * @param randomLength 随机数长度控制\r\n */\r\n\r\nexport const GenNonDuplicateID = (randomLength: number = 16) => {\r\n\treturn Number(Math.random().toString().substr(3, randomLength) + Date.now()).toString(36)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { schema } from \"./schema\";\r\nimport { ReactDraggable } from \"../../../draggable/index\";\r\nimport { IDraggableList } from \"../../../draggable/draggable\";\r\nimport { FormilyToDraggable } from \"../../../../utils/transform\";\r\nimport { GenNonDuplicateID } from \"../../../../utils\";\r\n\r\nexport const BuiltInComponent = () => {\r\n\tconst [list, setList] = useState<IDraggableList[]>(\r\n\t\tFormilyToDraggable(schema)\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ReactDraggable\r\n\t\t\tgroup={{\r\n\t\t\t\tpull: \"clone\",\r\n\t\t\t\tname: \"g2\",\r\n\t\t\t\tput: false,\r\n\t\t\t}}\r\n\t\t\tlist={list}\r\n\t\t\tsetList={setList}\r\n\t\t\tsort={false}\r\n\t\t\tclone={(item) => ({ ...item, id: item.id + \"-\" + GenNonDuplicateID() })}\r\n\t\t></ReactDraggable>\r\n\t);\r\n};\r\n","import { ISchema } from \"@formily/antd\";\r\nexport const schema: ISchema = {\r\n\ttype: \"object\",\r\n\tproperties: {\r\n\t\tarrayTable: {\r\n\t\t\ttitle: \"数组\",\r\n\t\t\tmaxItems: 3,\r\n\t\t\ttype: \"array\",\r\n\t\t\t\"x-component\": \"arraytable\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\t// operationsWidth: 300,\r\n\t\t\t},\r\n\t\t\titems: {\r\n\t\t\t\ttype: \"object\",\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\taa: {\r\n\t\t\t\t\t\t\"x-component\": \"input\",\r\n\t\t\t\t\t\tdescription: \"hello world\",\r\n\t\t\t\t\t\ttitle: \"字段1\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbb: {\r\n\t\t\t\t\t\t\"x-component\": \"input\",\r\n\t\t\t\t\t\ttitle: \"字段2\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// cc: {\r\n\t\t\t\t\t// \t\"x-component\": \"input\",\r\n\t\t\t\t\t// \ttitle: \"字段3\",\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// dd: {\r\n\t\t\t\t\t// \t\"x-component\": \"input\",\r\n\t\t\t\t\t// \ttitle: \"字段4\",\r\n\t\t\t\t\t// \t\"x-index\": 1,\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// ee: {\r\n\t\t\t\t\t// \t\"x-component\": \"input\",\r\n\t\t\t\t\t// \ttitle: \"字段5\",\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// ff: {\r\n\t\t\t\t\t// \t\"x-component\": \"input\",\r\n\t\t\t\t\t// \ttitle: \"字段6\",\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// gg: {\r\n\t\t\t\t\t// \t\"x-component\": \"input\",\r\n\t\t\t\t\t// \ttitle: \"字段7\",\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// hh: {\r\n\t\t\t\t\t// \t\"x-component\": \"rangepicker\",\r\n\t\t\t\t\t// \ttitle: \"字段8\",\r\n\t\t\t\t\t// },\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tarrayCards: {\r\n\t\t\ttitle: \"数组Cards\",\r\n\t\t\tmaxItems: 3,\r\n\t\t\ttype: \"array\",\r\n\t\t\t\"x-component\": \"arraycards\",\r\n\t\t\titems: {\r\n\t\t\t\ttype: \"object\",\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\taa: {\r\n\t\t\t\t\t\t\"x-component\": \"input\",\r\n\t\t\t\t\t\tdescription: \"hello world\",\r\n\t\t\t\t\t\ttitle: \"字段1\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbb: {\r\n\t\t\t\t\t\t\"x-component\": \"input\",\r\n\t\t\t\t\t\ttitle: \"字段2\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { schema } from \"./schema\";\r\nimport { ReactDraggable } from \"../../../draggable/index\";\r\nimport { IDraggableList } from \"../../../draggable/draggable\";\r\nimport { FormilyToDraggable } from \"../../../../utils/transform\";\r\nimport { GenNonDuplicateID } from \"../../../../utils\";\r\n\r\nexport const ArrayComponent = () => {\r\n\tconst [list, setList] = useState<IDraggableList[]>(\r\n\t\tFormilyToDraggable(schema)\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ReactDraggable\r\n\t\t\tgroup={{\r\n\t\t\t\tpull: \"clone\",\r\n\t\t\t\tname: \"g2\",\r\n\t\t\t\tput: false,\r\n\t\t\t}}\r\n\t\t\tlist={list}\r\n\t\t\tsetList={setList}\r\n\t\t\tsort={false}\r\n\t\t\tclone={(item) => ({ ...item, id: item.id + \"-\" + GenNonDuplicateID() })}\r\n\t\t></ReactDraggable>\r\n\t);\r\n};\r\n","import { ISchema } from \"@formily/antd\";\r\nexport const schema: ISchema = {\r\n\ttype: \"object\",\r\n\tproperties: {\r\n\t\tformCards: {\r\n\t\t\ttitle: \"formcards\",\r\n\t\t\ttype: \"object\",\r\n\t\t\t\"x-component\": \"card\",\r\n\t\t\tproperties: {\r\n\t\t\t\taa: {\r\n\t\t\t\t\t\"x-component\": \"input\",\r\n\t\t\t\t\tdescription: \"hello world\",\r\n\t\t\t\t\ttitle: \"字段1\",\r\n\t\t\t\t},\r\n\t\t\t\tbb: {\r\n\t\t\t\t\t\"x-component\": \"input\",\r\n\t\t\t\t\ttitle: \"字段2\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { schema } from \"./schema\";\r\nimport { ReactDraggable } from \"../../../draggable/index\";\r\nimport { IDraggableList } from \"../../../draggable/draggable\";\r\nimport { FormilyToDraggable } from \"../../../../utils/transform\";\r\nimport { GenNonDuplicateID } from \"../../../../utils\";\r\n\r\nexport const LayoutComponent = () => {\r\n\tconst [list, setList] = useState<IDraggableList[]>(\r\n\t\tFormilyToDraggable(schema)\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ReactDraggable\r\n\t\t\tgroup={{\r\n\t\t\t\tpull: \"clone\",\r\n\t\t\t\tname: \"g2\",\r\n\t\t\t\tput: false,\r\n\t\t\t}}\r\n\t\t\tlist={list}\r\n\t\t\tsetList={setList}\r\n\t\t\tsort={false}\r\n\t\t\tclone={(item) => ({ ...item, id: item.id + \"-\" + GenNonDuplicateID() })}\r\n\t\t></ReactDraggable>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { BuiltInComponent } from \"./builtInComponent\";\r\nimport { ArrayComponent } from \"./arrayComponent\";\r\nimport { LayoutComponent } from \"./layoutComponent\";\r\n\r\nexport const BaseComponent = () => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: \"20%\",\r\n\t\t\t\theight: \"600px\",\r\n\t\t\t\toverflow: \"auto\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<BuiltInComponent></BuiltInComponent>\r\n\t\t\t<ArrayComponent></ArrayComponent>\r\n\t\t\t<LayoutComponent></LayoutComponent>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nimport React, { useState } from 'react'\r\nimport { SchemaForm, ISchema, FormButtonGroup, Submit, Reset } from '@formily/antd'\r\nimport { Modal, Button } from 'antd'\r\nimport {\r\n\tInput,\r\n\tSelect,\r\n\tPassword,\r\n\tNumberPicker,\r\n\tSwitch,\r\n\tDatePicker,\r\n\tTimePicker,\r\n\tRange,\r\n\tUpload,\r\n\tCheckbox,\r\n\tRadio,\r\n\tRating,\r\n\tTransfer,\r\n\tFormCard,\r\n\tArrayTable,\r\n\tArrayCards\r\n} from '@formily/antd-components'\r\n\r\nconst BuiltInComponents = {\r\n\tInput,\r\n\tSelect,\r\n\tTextArea: Input.TextArea,\r\n\tPassword,\r\n\tNumberPicker,\r\n\tSwitch,\r\n\tDatePicker,\r\n\tRangePicker: DatePicker.RangePicker,\r\n\tWeekPicker: DatePicker.WeekPicker,\r\n\tMonthPicker: DatePicker.MonthPicker,\r\n\tYearPicker: DatePicker.YearPicker,\r\n\tTimePicker,\r\n\tRange,\r\n\tUpload,\r\n\tCheckbox,\r\n\tCheckboxGroup: Checkbox.Group,\r\n\tRadio,\r\n\tRadioGroup: Radio.Group,\r\n\tRating,\r\n\tTransfer\r\n}\r\n\r\nconst LayoutComponents = {\r\n\tFormCard\r\n}\r\n\r\nconst ArrayComponents = {\r\n\tArrayTable,\r\n\tArrayCards\r\n}\r\n\r\nexport const Preview = (props: ISchema) => {\r\n\tconst [state, setState] = useState({\r\n\t\tvisible: false\r\n\t})\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetState({\r\n\t\t\tvisible: false\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetState({\r\n\t\t\tvisible: false\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"primary\"\r\n\t\t\t\tonClick={() =>\r\n\t\t\t\t\tsetState({\r\n\t\t\t\t\t\tvisible: true\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t预览\r\n\t\t\t</Button>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Basic Modal\"\r\n\t\t\t\tvisible={state.visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80%'}\r\n\t\t\t\tcentered={true}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmaxHeight: '600px',\r\n\t\t\t\t\toverflow: 'auto'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<SchemaForm\r\n\t\t\t\t\tcomponents={{\r\n\t\t\t\t\t\t...BuiltInComponents,\r\n\t\t\t\t\t\t...LayoutComponents,\r\n\t\t\t\t\t\t...ArrayComponents\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tschema={props}\r\n\t\t\t\t\tonSubmit={(...args) => {\r\n\t\t\t\t\t\tconsole.log(args)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FormButtonGroup>\r\n\t\t\t\t\t\t<Submit>提交</Submit>​ <Reset>重置</Reset>​\r\n\t\t\t\t\t</FormButtonGroup>\r\n\t\t\t\t</SchemaForm>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t)\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from 'react'\r\nimport { ReactDraggable } from '../../draggable'\r\nimport { IDraggableList } from '../../draggable/draggable'\r\nimport { GenNonDuplicateID } from '../../../utils'\r\nimport { Preview } from './preview'\r\nimport { DraggableToFormily } from '../../../utils/transform'\r\n\r\nexport const Container = () => {\r\n\tconst [list, setList] = useState<Array<IDraggableList>>([\r\n\t\t{\r\n\t\t\ttype: 'object',\r\n\t\t\tid: 'schema',\r\n\t\t\ttitle: 'test'\r\n\t\t}\r\n\t])\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '60%'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Preview {...DraggableToFormily(list)}></Preview>\r\n\t\t\t<ReactDraggable\r\n\t\t\t\tlist={list}\r\n\t\t\t\tsetList={setList}\r\n\t\t\t\tgroup={{\r\n\t\t\t\t\tname: 'g1',\r\n\t\t\t\t\tput: true\r\n\t\t\t\t}}\r\n\t\t\t\tclone={(item) => ({\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tid: item.id + GenNonDuplicateID()\r\n\t\t\t\t})}\r\n\t\t\t></ReactDraggable>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { ISchema } from \"@formily/antd\";\r\nexport const schema: ISchema = {\r\n\ttype: \"object\",\r\n\tproperties: {\r\n\t\tlabel: {\r\n\t\t\ttype: \"object\",\r\n\t\t\t\"x-component\": \"mega-layout\",\r\n\t\t\t\"x-component-props\": {\r\n\t\t\t\tlabelAlign: \"top\",\r\n\t\t\t},\r\n\t\t\tproperties: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"title\",\r\n\t\t\t\t},\r\n\t\t\t\tdescription: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"description\",\r\n\t\t\t\t},\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"default\",\r\n\t\t\t\t},\r\n\t\t\t\tconst: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"const\",\r\n\t\t\t\t},\r\n\t\t\t\ttype: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"type\",\r\n\t\t\t\t\tdefault: \"string\",\r\n\t\t\t\t},\r\n\t\t\t\tid: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"id\",\r\n\t\t\t\t},\r\n\t\t\t\treadOnly: {\r\n\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\"x-component\": \"RadioGroup\",\r\n\t\t\t\t\ttitle: \"readOnly\",\r\n\t\t\t\t\tenum: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"true\",\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"false\",\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\twriteOnly: {\r\n\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\"x-component\": \"RadioGroup\",\r\n\t\t\t\t\ttitle: \"writeOnly\",\r\n\t\t\t\t\tenum: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"true\",\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"false\",\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t// x-component\t字段 UI 组件名称，大小写不敏感\tstring\r\n\t\t\t\t\"x-component\": {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"x-component\",\r\n\t\t\t\t},\r\n\t\t\t\t// x-component-props\t字段 UI 组件属性\t{}\r\n\t\t\t\t\"x-component-props\": {\r\n\t\t\t\t\ttype: \"object\",\r\n\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\tNO_NAME: {\r\n\t\t\t\t\t\t\t\"x-component\": \"card\",\r\n\t\t\t\t\t\t\t\"x-component-props\": {\r\n\t\t\t\t\t\t\t\ttitle: \"x-component-props\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttype: \"object\",\r\n\t\t\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\t\t\tplaceholder: {\r\n\t\t\t\t\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\t\ttitle: \"placeholder\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tenum: {\r\n\t\t\t\t\ttype: \"array\",\r\n\t\t\t\t\t\"x-component\": \"arraytable\",\r\n\t\t\t\t\ttitle: \"enum\",\r\n\t\t\t\t\titems: {\r\n\t\t\t\t\t\ttype: \"object\",\r\n\t\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\t\ttitle: \"label\",\r\n\t\t\t\t\t\t\t\t\"x-component\": \"input\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\ttitle: \"value\",\r\n\t\t\t\t\t\t\t\t\"x-component\": \"input\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t// validate\r\n\t\t\t\tmultipleOf: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"multipleOf\",\r\n\t\t\t\t},\r\n\t\t\t\t// maximum\t校验最大值(大于)\tnumber\r\n\t\t\t\tmaximum: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"maximum\",\r\n\t\t\t\t\tdescription: \"校验最大值(大于)\",\r\n\t\t\t\t},\r\n\t\t\t\t// exclusiveMaximum\t校验最大值（大于等于）\tnumber\r\n\t\t\t\texclusiveMaximum: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"exclusiveMaximum\",\r\n\t\t\t\t\tdescription: \"校验最大值（大于等于）\",\r\n\t\t\t\t},\r\n\t\t\t\t// minimum\t校验最小值(小于)\tnumber\r\n\t\t\t\tminimum: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"minimum\",\r\n\t\t\t\t\tdescription: \"校验最小值(小于)\",\r\n\t\t\t\t},\r\n\t\t\t\t// exclusiveMinimum\t最小值（小于等于）\tnumber\r\n\t\t\t\texclusiveMinimum: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"exclusiveMinimum\",\r\n\t\t\t\t\tdescription: \"最小值（小于等于）\",\r\n\t\t\t\t},\r\n\t\t\t\t// maxLength\t校验最大长度\tnumber\r\n\t\t\t\tmaxLength: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"maxLength\",\r\n\t\t\t\t\tdescription: \"校验最大长度\",\r\n\t\t\t\t},\r\n\t\t\t\t// minLength\t校验最小长度\tnumber\r\n\t\t\t\tminLength: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"minLength\",\r\n\t\t\t\t\tdescription: \"校验最小长度\",\r\n\t\t\t\t},\r\n\t\t\t\t// pattern\t正则校验规则\tstring | RegExp\r\n\t\t\t\tpattern: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"pattern\",\r\n\t\t\t\t\tdescription: \"正则校验规则\",\r\n\t\t\t\t},\r\n\t\t\t\t// maxItems\t最大条目数\tnumber\r\n\t\t\t\tmaxItems: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"maxItems\",\r\n\t\t\t\t\tdescription: \"最大条目数\",\r\n\t\t\t\t},\r\n\t\t\t\t// minItems\t最小条目数\tnumber\r\n\t\t\t\tminItems: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"minItems\",\r\n\t\t\t\t\tdescription: \"最小条目数\",\r\n\t\t\t\t},\r\n\t\t\t\t// uniqueItems\t是否校验重复\tboolean\r\n\t\t\t\tuniqueItems: {\r\n\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\ttitle: \"uniqueItems\",\r\n\t\t\t\t\tdescription: \"是否校验重复\",\r\n\t\t\t\t\t\"x-component\": \"RadioGroup\",\r\n\t\t\t\t\tenum: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"true\",\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"false\",\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t// maxProperties\t最大属性数量\tnumber\r\n\t\t\t\tmaxProperties: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"maxProperties\",\r\n\t\t\t\t\tdescription: \"最大属性数量\",\r\n\t\t\t\t},\r\n\t\t\t\t// minProperties\t最小属性数量\tnumber\r\n\t\t\t\tminProperties: {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"minProperties\",\r\n\t\t\t\t\tdescription: \"最小属性数量\",\r\n\t\t\t\t},\r\n\t\t\t\t// required\t必填 boolean\r\n\t\t\t\trequired: {\r\n\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\ttitle: \"required\",\r\n\t\t\t\t\tdescription: \"是否必填\",\r\n\t\t\t\t\t\"x-component\": \"RadioGroup\",\r\n\t\t\t\t\tenum: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"true\",\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"false\",\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t// format\t正则规则类型，详细类型可以往后看\tInternalFormats ！！！\r\n\t\t\t\tformat: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"format\",\r\n\t\t\t\t\tdescription: \"正则规则类型，详细类型可以往后看\",\r\n\t\t\t\t},\r\n\t\t\t\t// properties\t对象属性\t{[key : string]:Schema} ！！！\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"properties\",\r\n\t\t\t\t\tdescription: \"正则规则类型，详细类型可以往后看\",\r\n\t\t\t\t},\r\n\t\t\t\t// items\t数组描述\tSchema | Schema[] ！！！\r\n\t\t\t\titems: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"items\",\r\n\t\t\t\t\tdescription: \"数组描述\",\r\n\t\t\t\t},\r\n\t\t\t\t// additionalItems\t额外数组元素描述\tSchema ！！！\r\n\t\t\t\tadditionalItems: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"additionalItems\",\r\n\t\t\t\t\tdescription: \"额外数组元素描述\",\r\n\t\t\t\t},\r\n\t\t\t\t// patternProperties\t动态匹配对象的某个属性的 Schema\t{[key : string]:Schema} ！！！\r\n\t\t\t\tpatternProperties: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"patternProperties\",\r\n\t\t\t\t\tdescription: \"动态匹配对象的某个属性的 Schema\",\r\n\t\t\t\t},\r\n\t\t\t\t// additionalProperties\t匹配对象额外属性的 Schema\tSchema ！！！\r\n\t\t\t\tadditionalProperties: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"additionalProperties\",\r\n\t\t\t\t\tdescription: \"匹配对象额外属性的 Schema\",\r\n\t\t\t\t},\r\n\t\t\t\t// triggerType\t字段校验时机\t\"onChange\" | \"onBlur\"\r\n\t\t\t\ttriggerType: {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"triggerType\",\r\n\t\t\t\t\tdescription: \"字段校验时机\",\r\n\t\t\t\t\tenum: [\r\n\t\t\t\t\t\t{ label: \"onChange\", value: \"onChange\" },\r\n\t\t\t\t\t\t{ label: \"onBlur\", value: \"onBlur\" },\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"x-component-props\": {\r\n\t\t\t\t\t\tplaceholder: \"字段校验时机\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t// editable\t字段是否可编辑\tboolean\r\n\t\t\t\teditable: {\r\n\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\ttitle: \"editable\",\r\n\t\t\t\t\tdescription: \"字段是否可编辑\",\r\n\t\t\t\t\t\"x-component\": \"RadioGroup\",\r\n\t\t\t\t\tenum: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"true\",\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"false\",\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t// visible\t字段是否可见(数据+样式)\tboolean\r\n\t\t\t\tvisible: {\r\n\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\ttitle: \"visible\",\r\n\t\t\t\t\tdescription: \"字段是否可见(数据+样式)\",\r\n\t\t\t\t\t\"x-component\": \"RadioGroup\",\r\n\t\t\t\t\tenum: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"true\",\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"false\",\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t// display\t字段样式是否可见\tboolean\r\n\t\t\t\tdisplay: {\r\n\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\ttitle: \"display\",\r\n\t\t\t\t\tdescription: \"字段样式是否可见\",\r\n\t\t\t\t\t\"x-component\": \"RadioGroup\",\r\n\t\t\t\t\tenum: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"true\",\r\n\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: \"false\",\r\n\t\t\t\t\t\t\tvalue: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t// x-props\t字段扩展属性\t{ [name: string]: any } ！！！\r\n\t\t\t\t\"x-props\": {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"x-props\",\r\n\t\t\t\t\tdescription: \"字段扩展属性\",\r\n\t\t\t\t},\r\n\t\t\t\t// x-index\t字段顺序\tnumber\r\n\t\t\t\t\"x-index\": {\r\n\t\t\t\t\t\"x-component\": \"NumberPicker\",\r\n\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\ttitle: \"x-index\",\r\n\t\t\t\t\tdescription: \"字段顺序\",\r\n\t\t\t\t},\r\n\t\t\t\t// x-rules\t字段校验规则，详细描述可以往后看\tValidatePatternRules\r\n\t\t\t\t\"x-rules\": {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"x-rules\",\r\n\t\t\t\t\tdescription: \"字段校验规则，详细描述可以往后看\",\r\n\t\t\t\t},\r\n\t\t\t\t// x-linkages\t字段间联动协议，详细描述可以往后看\tArray<{ target: FormPathPattern, type: string, [key: string]: any }>\r\n\t\t\t\t\"x-linkages\": {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"x-linkages\",\r\n\t\t\t\t\tdescription: \"字段间联动协议，详细描述可以往后看\",\r\n\t\t\t\t},\r\n\t\t\t\t// x-mega-props\t字段布局属性\t{ [name: string]: any }\r\n\t\t\t\t\"x-mega-props\": {\r\n\t\t\t\t\t\"x-component\": \"Input\",\r\n\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\ttitle: \"x-mega-props\",\r\n\t\t\t\t\tdescription: \"字段布局属性\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n","/** @format */\r\n\r\nimport React, { useContext } from 'react'\r\nimport { SchemaForm, FormButtonGroup, Submit } from '@formily/antd'\r\nimport {\r\n\tInput,\r\n\tSelect,\r\n\tPassword,\r\n\tNumberPicker,\r\n\tSwitch,\r\n\tDatePicker,\r\n\tTimePicker,\r\n\tRange,\r\n\tUpload,\r\n\tCheckbox,\r\n\tRadio,\r\n\tRating,\r\n\tTransfer,\r\n\tFormCard,\r\n\tArrayTable,\r\n\tArrayCards,\r\n\tFormMegaLayout\r\n} from '@formily/antd-components'\r\nimport { schema } from './schema'\r\nimport { ActiveItem } from '../context'\r\n\r\nconst BuiltInComponents = {\r\n\tInput,\r\n\tSelect,\r\n\tTextArea: Input.TextArea,\r\n\tPassword,\r\n\tNumberPicker,\r\n\tSwitch,\r\n\tDatePicker,\r\n\tRangePicker: DatePicker.RangePicker,\r\n\tWeekPicker: DatePicker.WeekPicker,\r\n\tMonthPicker: DatePicker.MonthPicker,\r\n\tYearPicker: DatePicker.YearPicker,\r\n\tTimePicker,\r\n\tRange,\r\n\tUpload,\r\n\tCheckbox,\r\n\tCheckboxGroup: Checkbox.Group,\r\n\tRadio,\r\n\tRadioGroup: Radio.Group,\r\n\tRating,\r\n\tTransfer\r\n}\r\n\r\nconst LayoutComponents = {\r\n\tFormCard,\r\n\tFormMegaLayout\r\n}\r\n\r\nconst ArrayComponents = {\r\n\tArrayTable,\r\n\tArrayCards\r\n}\r\n\r\nexport const PropertiesEdit = () => {\r\n\tconst { active } = useContext(ActiveItem)\r\n\r\n\tconst { list, setList } = active\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '30%',\r\n\t\t\t\theight: '600px',\r\n\t\t\t\toverflow: 'auto'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<SchemaForm\r\n\t\t\t\tonSubmit={(value) => {\r\n\t\t\t\t\tsetList(value)\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={list}\r\n\t\t\t\tcomponents={{\r\n\t\t\t\t\t...BuiltInComponents,\r\n\t\t\t\t\t...LayoutComponents,\r\n\t\t\t\t\t...ArrayComponents\r\n\t\t\t\t}}\r\n\t\t\t\tschema={schema}\r\n\t\t\t>\r\n\t\t\t\t<FormButtonGroup>\r\n\t\t\t\t\t<Submit>提交</Submit>\r\n\t\t\t\t</FormButtonGroup>\r\n\t\t\t</SchemaForm>\r\n\t\t</div>\r\n\t)\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from 'react'\r\nimport { BaseComponent } from './baseComponent'\r\nimport { Container } from './container'\r\nimport { PropertiesEdit } from './propertiesEdit'\r\nimport { ActiveItem } from './context'\r\nimport { IDraggableList } from '../draggable/draggable.d'\r\n\r\nexport const Core = () => {\r\n\tconst [active, setActive] = useState<{\r\n\t\tlist: IDraggableList\r\n\t\tsetList(IDraggableList: IDraggableList): void\r\n\t}>({\r\n\t\tlist: {\r\n\t\t\tid: 'schema',\r\n\t\t\tproperties: [],\r\n\t\t\ttype: 'object'\r\n\t\t},\r\n\t\tsetList: (list: IDraggableList) => {}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'flex'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<ActiveItem.Provider\r\n\t\t\t\tvalue={{\r\n\t\t\t\t\tactive: active,\r\n\t\t\t\t\tchangeActive: setActive\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<BaseComponent></BaseComponent>\r\n\t\t\t\t<Container></Container>\r\n\t\t\t\t<PropertiesEdit></PropertiesEdit>\r\n\t\t\t</ActiveItem.Provider>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Core } from \"./components/core\";\nimport { Button } from \"antd\";\n\nlet FriendStatus = {};\n\nconst useFriendStatus = (firendId: number) => {\n\tconst [online, setOnline] = useState<boolean | null>(null);\n\n\tconst handleStatusChange = (status: boolean) => {\n\t\tsetOnline(status);\n\t};\n\n\tuseEffect(() => {\n\t\tFriendStatus[firendId] = handleStatusChange;\n\t\treturn () => {\n\t\t\tdelete FriendStatus[firendId];\n\t\t};\n\t});\n\n\treturn online;\n};\n\nconst App = () => {\n\tconst [count, setCount] = useState(0);\n\n\tuseEffect(() => {\n\t\tdocument.title = `your clicked ${count} times`;\n\t\tconsole.log(`your clicked ${count} times`);\n\t\treturn () => {\n\t\t\tconsole.log(\"unmount\");\n\t\t};\n\t});\n\n\tconst isOnline = useFriendStatus(1);\n\n\t// setTimeout(() => {\n\t// \tObject.keys(FriendStatus).forEach((item) => {\n\t// \t\tFriendStatus[item](!isOnline);\n\t// \t});\n\t// }, 1500);\n\n\tlet firend = \"loading....\";\n\n\tif (isOnline) {\n\t\tfirend = \"true\";\n\t} else {\n\t\tfirend = \"false\";\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Core></Core>\n\t\t\t<p>{count}</p>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetCount(count + 1);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tadd\n\t\t\t\t{firend}\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}